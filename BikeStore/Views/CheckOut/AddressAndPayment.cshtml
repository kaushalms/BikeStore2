@model BikeStore.Models.Order

@{
    ViewBag.Title = "AddressAndPayment";
}

<h2>AddressAndPayment</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderId)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.PickUpDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PickUpDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PickUpDate, "", new { @class = "text-danger" })
                <asp:CompareValidator ID="CompareValidator2" runat="server" ErrorMessage="Date Should be Greater Than Current Date"
                                      ControlToValidate="txt_DateFrom" ValuetoCompare='<%# DateTime.Now.ToString("d") %>' SetFocusOnError="true" Display="Dynamic" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayModeId, "PayModeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("PayModeId", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownListFor(x => x.PayModeId, ViewBag.PayModeId, new Dictionary<string, object> { { "class", "control-label col-md-2" } })*@
                @Html.ValidationMessageFor(model => model.PayModeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrderStatusId, "OrderStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrderStatusId", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownListFor(x => x.PayModeId, ViewBag.PayModeId, new Dictionary<string, object> { { "class", "control-label col-md-2" } })*@
                @Html.ValidationMessageFor(model => model.OrderStatusId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
